{
  "global-id": "https://www.dockstore.org:8443/tools/quay.io%252Fcollaboratory%252Fdockstore-tool-bedtools-genomecov",
  "registry-id": "quay.io/collaboratory/dockstore-tool-bedtools-genomecov",
  "registry": "QUAY_IO",
  "organization": "collaboratory",
  "name": "dockstore-tool-bedtools-genomecov",
  "toolname": "",
  "tooltype": {
    "id": "0",
    "name": "CommandLineTool",
    "description": "CWL described CommandLineTool"
  },
  "description": "Tool:    bedtools genomecov (aka genomeCoverageBed)\nSources: https://github.com/arq5x/bedtools2\nSummary: Compute the coverage of a feature file among a genome.\nUsage: bedtools genomecov [OPTIONS] -i <bed/gff/vcf> -g <genome>",
  "author": "Andrey Kartashov",
  "meta-version": "2016-05-17 15:37:10.29",
  "contains": [],
  "versions": [
    {
      "name": "master",
      "global-id": "https://www.dockstore.org:8443/tools/quay.io%252Fcollaboratory%252Fdockstore-tool-bedtools-genomecov/version/master",
      "registry-id": null,
      "image": "quay.io/collaboratory/dockstore-tool-bedtools-genomecov:master",
      "descriptor": {
        "descriptor": "#!/usr/bin/env cwl-runner\n\nclass: CommandLineTool\nid: \"bedtools-genomecov\"\nlabel: \"bedtools-genomecov\"\ndescription: |\n  Tool:    bedtools genomecov (aka genomeCoverageBed)\n  Sources: https://github.com/arq5x/bedtools2\n  Summary: Compute the coverage of a feature file among a genome.\n  Usage: bedtools genomecov [OPTIONS] -i <bed/gff/vcf> -g <genome>\n\ndct:creator:\n  \"@id\": \"http://orcid.org/0000-0001-9102-5681\"\n  foaf:name: \"Andrey Kartashov\"\n  foaf:mbox: \"mailto:Andrey.Kartashov@cchmc.org\"\n\ndct:description: \"Developed at Cincinnati Children’s Hospital Medical Center for the CWL consortium http://commonwl.org/ Original URL: https://github.com/common-workflow-language/workflows\"\n\ndct:contributor:\n  \"@id\": \"http://orcid.org/orcid.org/0000-0002-6130-1021\"\n  foaf:name: Denis Yuen\n  foaf:mbox: \"mailto:help@cancercollaboratory.org\"\n\nrequirements:\n  - class: ExpressionEngineRequirement\n    id: \"#node-engine\"\n    requirements:\n    - class: DockerRequirement\n      dockerPull: commonworkflowlanguage/nodejs-engine\n    engineCommand: cwlNodeEngine.js\n  - class: DockerRequirement\n    dockerPull: quay.io/collaboratory/dockstore-tool-bedtools-genomecov\n\ninputs:\n  - id: \"#input\"\n    type: File\n    description: |\n      The input file can be in BAM format\n          (Note: BAM _must_ be sorted by position)\n      or <bed/gff/vcf>\n    inputBinding:\n      position: 1\n      secondaryFiles:\n        - engine: \"#node-engine\"\n          script: |\n           {\n            if ((/.*\\.bam$/i).test($job['input'].path))\n               return {\"path\": $job['input'].path+\".bai\", \"class\": \"File\"};\n            return [];\n           }\n      valueFrom:\n        engine: \"#node-engine\"\n        script: |\n          {\n            var prefix = ((/.*\\.bam$/i).test($job['input'].path))?'-ibam':'-i';\n            return [prefix,$job['input'].path];\n          }\n\n  - id: \"#genomeFile\"\n    type: File\n    description:\n      Input genome file.\n    inputBinding:\n      position: 2\n      prefix: \"-g\"\n\n#  - id: \"#dept\"\n#    type: [\"null\",\"depts\"]\n  - id: \"#dept\"\n    type:\n      name: \"JustDepts\"\n      type: enum\n      symbols: [\"-bg\",\"-bga\",\"-d\"]\n    inputBinding:\n      position: 4\n\n  - id: \"#scale\"\n    type: [\"null\",float ]\n    description: |\n      Scale the coverage by a constant factor.\n      Each coverage value is multiplied by this factor before being reported.\n      Useful for normalizing coverage by, e.g., reads per million (RPM).\n      - Default is 1.0; i.e., unscaled.\n      - (FLOAT)\n    inputBinding:\n      position: 4\n      prefix: -scale\n\n  - id: \"#dz\"\n    type: [\"null\",boolean]\n    description: |\n      Report the depth at each genome position (with zero-based coordinates).\n      Reports only non-zero positions.\n      Default behavior is to report a histogram.\n    inputBinding:\n      position: 4\n      prefix: \"-dz\"\n\n  - id: \"#split\"\n    type: [\"null\",boolean]\n    description: |\n      reat \"split\" BAM or BED12 entries as distinct BED intervals.\n      when computing coverage.\n      For BAM files, this uses the CIGAR \"N\" and \"D\" operations\n      to infer the blocks for computing coverage.\n      For BED12 files, this uses the BlockCount, BlockStarts, and BlockEnds\n      fields (i.e., columns 10,11,12).\n    inputBinding:\n      position: 4\n      prefix: \"-split\"\n\n  - id: \"#strand\"\n    type: [\"null\", string]\n    description: |\n      Calculate coverage of intervals from a specific strand.\n      With BED files, requires at least 6 columns (strand is column 6).\n      - (STRING): can be + or -\n    inputBinding:\n      position: 4\n      prefix: \"-strand\"\n\n  - id: \"#max\"\n    type: [\"null\",int]\n    description: |\n      Combine all positions with a depth >= max into\n      a single bin in the histogram. Irrelevant\n      for -d and -bedGraph\n      - (INTEGER)\n    inputBinding:\n      position: 4\n      prefix: \"-max\"\n\n  - id: \"#m5\"\n    type: [\"null\",boolean]\n    description: |\n      Calculate coverage of 5\" positions (instead of entire interval).\n    inputBinding:\n      position: 4\n      prefix: \"-5\"\n\n  - id: \"#m3\"\n    type: [\"null\",boolean]\n    description: |\n      Calculate coverage of 3\" positions (instead of entire interval).\n    inputBinding:\n      position: 4\n      prefix: \"-3\"\n\n  - id: \"#genomecoverageout\"\n    type: string\n\noutputs:\n  - id: \"#genomecoverage\"\n    type: File\n    description: \"The file containing the genome coverage\"\n    outputBinding:\n      glob: \n        engine: cwl:JsonPointer\n        script: /job/genomecoverageout\nstdout: \n  engine: cwl:JsonPointer\n  script: /job/genomecoverageout\n\n\n\nbaseCommand: [\"bedtools\", \"genomecov\"]\n",
        "url": "https://raw.githubusercontent.com/CancerCollaboratory/dockstore-tool-bedtools-genomecov/master/Dockstore.cwl"
      },
      "dockerfile": {
        "dockerfile": "FROM ubuntu:15.04\nMAINTAINER Collaboratory@OICR \nENV VERSION=2.25.0\nRUN apt-get update && apt-get install -y wget make g++ zlib1g-dev python\nRUN wget -q -O bedtools2.tar.gz https://github.com/arq5x/bedtools2/releases/download/v${VERSION}/bedtools-${VERSION}.tar.gz \nRUN tar -zxvf bedtools2.tar.gz \nWORKDIR /bedtools2 \nRUN make -j 2 \nWORKDIR / \nRUN cp ./bedtools2/bin/bedtools ./ \nRUN strip bedtools\nENV PATH /:$PATH\nCMD [\"bedtools\", \"genomecov\"]\n",
        "url": "https://raw.githubusercontent.com/CancerCollaboratory/dockstore-tool-bedtools-genomecov/master/Dockerfile"
      },
      "meta-version": "2015-11-12 22:41:06.0"
    },
    {
      "name": "latest",
      "global-id": "https://www.dockstore.org:8443/tools/quay.io%252Fcollaboratory%252Fdockstore-tool-bedtools-genomecov/version/latest",
      "registry-id": null,
      "image": "quay.io/collaboratory/dockstore-tool-bedtools-genomecov:latest",
      "descriptor": {
        "descriptor": "#!/usr/bin/env cwl-runner\n\nclass: CommandLineTool\nid: \"bedtools-genomecov\"\nlabel: \"bedtools-genomecov\"\ndescription: |\n  Tool:    bedtools genomecov (aka genomeCoverageBed)\n  Sources: https://github.com/arq5x/bedtools2\n  Summary: Compute the coverage of a feature file among a genome.\n  Usage: bedtools genomecov [OPTIONS] -i <bed/gff/vcf> -g <genome>\n\ndct:creator:\n  \"@id\": \"http://orcid.org/0000-0001-9102-5681\"\n  foaf:name: \"Andrey Kartashov\"\n  foaf:mbox: \"mailto:Andrey.Kartashov@cchmc.org\"\n\ndct:description: \"Developed at Cincinnati Children’s Hospital Medical Center for the CWL consortium http://commonwl.org/ Original URL: https://github.com/common-workflow-language/workflows\"\n\ndct:contributor:\n  \"@id\": \"http://orcid.org/orcid.org/0000-0002-6130-1021\"\n  foaf:name: Denis Yuen\n  foaf:mbox: \"mailto:help@cancercollaboratory.org\"\n\nrequirements:\n  - class: ExpressionEngineRequirement\n    id: \"#node-engine\"\n    requirements:\n    - class: DockerRequirement\n      dockerPull: commonworkflowlanguage/nodejs-engine\n    engineCommand: cwlNodeEngine.js\n  - class: DockerRequirement\n    dockerPull: quay.io/collaboratory/dockstore-tool-bedtools-genomecov\n\ninputs:\n  - id: \"#input\"\n    type: File\n    description: |\n      The input file can be in BAM format\n          (Note: BAM _must_ be sorted by position)\n      or <bed/gff/vcf>\n    inputBinding:\n      position: 1\n      secondaryFiles:\n        - engine: \"#node-engine\"\n          script: |\n           {\n            if ((/.*\\.bam$/i).test($job['input'].path))\n               return {\"path\": $job['input'].path+\".bai\", \"class\": \"File\"};\n            return [];\n           }\n      valueFrom:\n        engine: \"#node-engine\"\n        script: |\n          {\n            var prefix = ((/.*\\.bam$/i).test($job['input'].path))?'-ibam':'-i';\n            return [prefix,$job['input'].path];\n          }\n\n  - id: \"#genomeFile\"\n    type: File\n    description:\n      Input genome file.\n    inputBinding:\n      position: 2\n      prefix: \"-g\"\n\n#  - id: \"#dept\"\n#    type: [\"null\",\"depts\"]\n  - id: \"#dept\"\n    type:\n      name: \"JustDepts\"\n      type: enum\n      symbols: [\"-bg\",\"-bga\",\"-d\"]\n    inputBinding:\n      position: 4\n\n  - id: \"#scale\"\n    type: [\"null\",float ]\n    description: |\n      Scale the coverage by a constant factor.\n      Each coverage value is multiplied by this factor before being reported.\n      Useful for normalizing coverage by, e.g., reads per million (RPM).\n      - Default is 1.0; i.e., unscaled.\n      - (FLOAT)\n    inputBinding:\n      position: 4\n      prefix: -scale\n\n  - id: \"#dz\"\n    type: [\"null\",boolean]\n    description: |\n      Report the depth at each genome position (with zero-based coordinates).\n      Reports only non-zero positions.\n      Default behavior is to report a histogram.\n    inputBinding:\n      position: 4\n      prefix: \"-dz\"\n\n  - id: \"#split\"\n    type: [\"null\",boolean]\n    description: |\n      reat \"split\" BAM or BED12 entries as distinct BED intervals.\n      when computing coverage.\n      For BAM files, this uses the CIGAR \"N\" and \"D\" operations\n      to infer the blocks for computing coverage.\n      For BED12 files, this uses the BlockCount, BlockStarts, and BlockEnds\n      fields (i.e., columns 10,11,12).\n    inputBinding:\n      position: 4\n      prefix: \"-split\"\n\n  - id: \"#strand\"\n    type: [\"null\", string]\n    description: |\n      Calculate coverage of intervals from a specific strand.\n      With BED files, requires at least 6 columns (strand is column 6).\n      - (STRING): can be + or -\n    inputBinding:\n      position: 4\n      prefix: \"-strand\"\n\n  - id: \"#max\"\n    type: [\"null\",int]\n    description: |\n      Combine all positions with a depth >= max into\n      a single bin in the histogram. Irrelevant\n      for -d and -bedGraph\n      - (INTEGER)\n    inputBinding:\n      position: 4\n      prefix: \"-max\"\n\n  - id: \"#m5\"\n    type: [\"null\",boolean]\n    description: |\n      Calculate coverage of 5\" positions (instead of entire interval).\n    inputBinding:\n      position: 4\n      prefix: \"-5\"\n\n  - id: \"#m3\"\n    type: [\"null\",boolean]\n    description: |\n      Calculate coverage of 3\" positions (instead of entire interval).\n    inputBinding:\n      position: 4\n      prefix: \"-3\"\n\n  - id: \"#genomecoverageout\"\n    type: string\n\noutputs:\n  - id: \"#genomecoverage\"\n    type: File\n    description: \"The file containing the genome coverage\"\n    outputBinding:\n      glob: \n        engine: cwl:JsonPointer\n        script: /job/genomecoverageout\nstdout: \n  engine: cwl:JsonPointer\n  script: /job/genomecoverageout\n\n\n\nbaseCommand: [\"bedtools\", \"genomecov\"]\n",
        "url": "https://raw.githubusercontent.com/CancerCollaboratory/dockstore-tool-bedtools-genomecov/master/Dockstore.cwl"
      },
      "dockerfile": {
        "dockerfile": "FROM ubuntu:15.04\nMAINTAINER Collaboratory@OICR \nENV VERSION=2.25.0\nRUN apt-get update && apt-get install -y wget make g++ zlib1g-dev python\nRUN wget -q -O bedtools2.tar.gz https://github.com/arq5x/bedtools2/releases/download/v${VERSION}/bedtools-${VERSION}.tar.gz \nRUN tar -zxvf bedtools2.tar.gz \nWORKDIR /bedtools2 \nRUN make -j 2 \nWORKDIR / \nRUN cp ./bedtools2/bin/bedtools ./ \nRUN strip bedtools\nENV PATH /:$PATH\nCMD [\"bedtools\", \"genomecov\"]\n",
        "url": "https://raw.githubusercontent.com/CancerCollaboratory/dockstore-tool-bedtools-genomecov/master/Dockerfile"
      },
      "meta-version": "2015-11-12 22:41:07.0"
    }
  ]
}
